!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.gobble=e():t.gobble=e()}(window,(function(){return function(t){var e={};function i(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}return i.m=t,i.c=e,i.d=function(t,e,r){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)i.d(r,o,function(e){return t[e]}.bind(null,o));return r},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=516)}({515:function(t,e,i){},516:function(t,e,i){"use strict";i.r(e);var r={determineType(){if("svg"===this.origEle.tagName){const t=this.origEle.firstElementChild;t&&"symbol"===t.tagName?this.type="symbol":t&&"use"===t.tagName?(this.type="sprite",this.spriteId=t.getAttributeNS("http://www.w3.org/1999/xlink","href")):this.type="inline"}else if("IMG"===this.origEle.tagName){const t=this.origEle.src;if(t){("svg"===t.split(".").pop()||t.includes("data:image/svg+xml;base64"))&&(this.url=t,this.type="img src")}}else if("OBJECT"===this.origEle.tagName)this.url=this.data,this.type="object";else if("DIV"===this.origEle.tagName){const t=window.getComputedStyle(this.origEle,null),e=t.backgroundImage.slice(4,-1).replace(/"/g,""),i=e.substr(e.lastIndexOf(".")+1);"none"!==t.backgroundImage&&/(svg)$/gi.test(i)&&(this.url=e,this.type="bg img")}return this},buildSpriteString(){if(this.spriteId){const t=document.querySelector(this.spriteId).cloneNode(!0);t&&this.origEle.prepend(t)}return this},getRects(t){const e=t.getBoundingClientRect();this.height=Math.ceil(e.height),this.width=Math.ceil(e.width)},determineSize(){if(this.size=`${this.width}x${this.height}`,0===this.width&&0===this.height)this.size="Hidden";else if(this.origEle.hasAttribute("width")&&this.origEle.hasAttribute("height")){const t=this.origEle.getAttribute("width"),e=this.origEle.getAttribute("height");t.includes("%")?this.size="":t.includes("px")?this.size=`${t.slice(0,-2)}x${e.slice(0,-2)}`:(this.size=`${t}x${e}`,this.width=t,this.height=e)}return this},async fetchSvg(){let t;const e=new XMLSerializer;if(this.url){const i=await fetch(this.url,{mode:"no-cors"});"opaque"===i.type?(this.cors=!0,t=e.serializeToString(this.origEle)):t=await i.text()}else t=e.serializeToString(this.origEle);return this.svgString=t,this},checkForWhite(){const t=["white","#FFF","#FFFFFF","#fff","#ffffff"];for(const e of t)this.presentationSvg&&this.presentationSvg.includes(e)&&(this.hasWhite=!0);return this},fixupString(){const t=(new DOMParser).parseFromString(this.svgString,"image/svg+xml").documentElement;return"svg"===t.nodeName&&(t.hasAttribute("viewBox")||t.setAttribute("viewBox",`0 0 ${this.width} ${this.height}`),t.removeAttribute("height"),t.removeAttribute("width"),t.removeAttribute("style"),t.removeAttribute("class"),t.removeAttribute("fill")),t.setAttribute("class","gob__card__svg__trick"),t.setAttribute("preserveAspectRatio","xMidYMid meet"),this.presentationSvg=(new XMLSerializer).serializeToString(t),this}};class o{constructor(t){const e=t.getBoundingClientRect();this.origEle=t.cloneNode(!0),this.type=void 0,this.url=void 0,this.size=void 0,this.svgString=void 0,this.presentationSvg=void 0,this.cors=!1,this.hasWhite=!1,this.spriteId=void 0,this.spriteMaster=!1,this.height=Math.ceil(e.height),this.width=Math.ceil(e.width),this.location=window.document.location.host}}o.prototype.fixupString=r.fixupString,o.prototype.determineType=r.determineType,o.prototype.determineSize=r.determineSize,o.prototype.fetchSvg=r.fetchSvg,o.prototype.checkForWhite=r.checkForWhite,o.prototype.buildSpriteString=r.buildSpriteString,o.prototype.serialize=r.serialize;var s=o;var n=function(){const t=Array.from(window.document.querySelectorAll("svg")),e=Array.from(window.document.querySelectorAll('object[data*=".svg"]'));return[...t,...Array.from(window.document.querySelectorAll("img")),...e,...Array.from(window.document.querySelectorAll("div"))]};var h=async function(){const t=n().map(t=>new s(t)).map(t=>t.determineType()).filter(t=>t.type).map(t=>t.buildSpriteString()).map(t=>t.determineSize()).map(t=>t.fetchSvg()),e=(await Promise.all(t.map(t=>t.catch(t=>t)))).filter(t=>!(t instanceof Error));var i,r;return(r="svgString",(i=e).map(t=>t[r]).map((t,e,i)=>i.indexOf(t)===e&&e).filter(t=>i[t]).map(t=>i[t])).map(t=>(t.fixupString(),t.checkForWhite(),delete t.origEle,t))};i(515),chrome.runtime.onMessage.addListener((function(t,e,i){if("start_gobbling"===t.message)return h().then(t=>{0===t.length?function(){const t=document.createElement("div");t.classList.add("gob__noGobbler"),t.innerHTML="ðŸ˜¢ Drats, couldn't find any SVGs to gobble",document.body.insertAdjacentElement("beforebegin",t),setTimeout(()=>{t.remove()},2900)}():i({complete:!0,data:t})}),!0}))}})}));